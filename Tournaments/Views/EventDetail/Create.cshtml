@model Tournaments.ViewModels.EventDetailCreateViewModel

<h2>
    @{
        @ViewBag.Title;
    }

</h2>




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.HiddenFor(m => m.Event.EventID, new { id = Model.Event.EventID })
    @Html.HiddenFor(m => m.Event.TournamentID, new { id = Model.Event.TournamentID })

    @*<div class="form-group">
            @Html.LabelFor(model => model.Event.EventID, "EventID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EventID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Event.EventID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.EventDetailStatus, "Event Detail Status ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.DropDownListFor(m => m.EventDetailStatus, new SelectList(Model.EventDetailStatus, "EventDetailStatusID", "EventDetailStatusName", Model.EventDetailStatus))
                @Html.ValidationMessageFor(model => model.EventDetailStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetailStatus, "Event Detail Status ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">


            @Html.DropDownListFor(model => model.EventDetail.EventDetailStatusID, (SelectList)ViewBag.StatusList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EventDetailStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetail.EventDetailName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDetail.EventDetailName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDetail.EventDetailName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetail.EventDetailNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDetail.EventDetailNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDetail.EventDetailNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetail.EventDetailOdd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDetail.EventDetailOdd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDetail.EventDetailOdd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetail.FinishingPosition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDetail.FinishingPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDetail.FinishingPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDetail.FirstTimer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.EventDetail.FirstTimer)
                @Html.ValidationMessageFor(model => model.EventDetail.FirstTimer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Event Details", "Details", "Event", new { id = Model.Event.EventID }, null)
</div>
